<?php
/**
 * CompanyApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Carooline
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * sale REST services
 *
 * Get or Update Sales
 *
 * OpenAPI spec version: 0.1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Carooline;

use GuzzleHttp\Client;
use Carooline\Configuration;
use Carooline\ApiException;
use Carooline\ObjectSerializer;
use Carooline\Api\AuthApi;
use Carooline\Api\CompanyApi;
use Carooline\Model\LoginRequest;

/**
 * CompanyApiTest Class Doc Comment
 *
 * @category Class
 * @package  Carooline
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CompanyApiTest extends \PHPUnit\Framework\TestCase
{

    protected static $client;
    protected static $config;
    protected $companyApi;

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass() : void
    {
        self::$client = new Client();
        self::$config = new Configuration();
        self::$config->setHost($_ENV['api_host']);

        $authApi = new AuthApi(
            self::$client,
            self::$config
        );
        $body = new LoginRequest([
            'login' => $_ENV['api_login'],
            'password' => $_ENV['api_password']
        ]);

        $result = $authApi->authLoginPost($body);
        $token = $result->getToken();
        self::$config->setAccessToken($token);
    }

    /**
     * Setup before running each test case
     */
    protected function setUp() : void
    {
        $this->companyApi = new CompanyApi(
            self::$client,
            self::$config
        );
    }
    /**
     * Test case for companyGet
     *
     * Search Company by name or company's group..
     *
     */
    public function testCompanyGet()
    {
        // public function companyGet($company_group_number = null, $name = null, $tradename_number = null)
        $result = $this->companyApi->companyGet(2);
        $this->assertInstanceOf(\Carooline\Model\CompanySearchResponse::class, $result);
        $this->assertGreaterThanOrEqual(0, $result->getCount());
        
        $result = $this->companyApi->companyGet();
        $this->assertInstanceOf(\Carooline\Model\CompanySearchResponse::class, $result);
        $this->assertGreaterThanOrEqual(1, $result->getCount());
        
        $result = $this->companyApi->companyGet(null, "BAKE");
        $this->assertInstanceOf(\Carooline\Model\CompanySearchResponse::class, $result);
        $this->assertGreaterThanOrEqual(1, $result->getCount());
    }

    /**
     * Test case for companyIdGet
     *
     * Get Company's informations.
     *
     */
    public function testCompanyIdGet()
    {
        $company = $this->companyApi->companyIdGet(1);
        $this->assertInstanceOf(\Carooline\Model\Company::class, $company);
        $this->assertEquals("BAKELIT", $company->getName());
        $this->assertEquals("11-19 boulevard gallieni", $company->getStreet());
        $this->assertEquals("92230", $company->getZip());
        $this->assertEquals("GENNEVILLIERS", $company->getCity());
        $this->assertEquals("France", $company->getCountry());
        $this->assertEquals("contact@bakelit.eu", $company->getEmail());
        $this->assertEquals(0, $company->getParentId());
        $this->assertEquals(1, $company->getPartnerId());
        $this->assertInstanceOf(\Carooline\Model\Partner::class, $company->getPartner());
        $this->assertEquals("contact@bakelit.eu", $company->getPartner()->getEmail());

    }

    /**
     * Test case for companyMyCompanyGet
     *
     * Get info about your Company.
     *
     */
    public function testCompanyMyCompanyGet()
    {
        $company = $this->companyApi->companyMyCompanyGet();
        $this->assertInstanceOf(\Carooline\Model\Company::class, $company);
        $this->assertEquals("BAKELIT", $company->getName());
        $this->assertEquals("11-19 boulevard gallieni", $company->getStreet());
        $this->assertEquals("92230", $company->getZip());
        $this->assertEquals("GENNEVILLIERS", $company->getCity());
        $this->assertEquals("France", $company->getCountry());
        $this->assertEquals("contact@bakelit.eu", $company->getEmail());
        $this->assertEquals(0, $company->getParentId());
        $this->assertEquals(1, $company->getPartnerId());
        $this->assertInstanceOf(\Carooline\Model\Partner::class, $company->getPartner());
        $this->assertEquals("contact@bakelit.eu", $company->getPartner()->getEmail());
        $this->assertEquals("92230", $company->getPartner()->getZip());
    }
}
