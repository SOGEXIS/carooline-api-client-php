<?php
/**
 * CrmLeadsApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Carooline
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * crm REST services
 *
 * Get or Update CRM
 *
 * OpenAPI spec version: 0.1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

namespace Carooline;

use GuzzleHttp\Client;
use Carooline\Configuration;
use Carooline\ApiException;
use Carooline\ObjectSerializer;
use Carooline\Api\AuthApi;
use Carooline\Api\CrmLeadsApi;
use Carooline\Model\LoginRequest;
use Carooline\Model\CrmLead;
use Carooline\Model\CrmLeadCreateRequest;
use Carooline\Model\CrmLeadUpdateRequest;
use Carooline\Model\CrmLeadSearchResponse;

/**
 * CrmLeadsApiTest Class Doc Comment
 *
 * @category Class
 * @package  Carooline
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class CrmLeadsApiTest extends \PHPUnit\Framework\TestCase
{

    protected static $client;
    protected static $config;
    protected $crmLeadApi;

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass() : void
    {
        self::$client = new Client();
        self::$config = new Configuration();
        self::$config->setHost($_ENV['api_host']);

        $authApi = new AuthApi(
            self::$client,
            self::$config
        );
        $body = new LoginRequest([
            'login' => $_ENV['api_login'],
            'password' => $_ENV['api_password']
        ]);

        $result = $authApi->authLoginPost($body);
        $token = $result->getToken();
        self::$config->setAccessToken($token);
    }

    /**
     * Setup before running each test case
     */
    protected function setUp() : void
    {
        $this->crmLeadApi = new CrmLeadsApi(
            self::$client,
            self::$config
        );
    }
    /**
     * Test case for crmLeadsCreatePost
     *
     * Create a new Crm Lead..
     *
     */
    public function testCrmLeadsCreatePost()
    {
        $body = new CrmLeadCreateRequest([
            "description" => "Bonjour voici un test API",
            "street2" => "Rue 2",
            "phone" => "0909809809",
            "street" => "21 Rue du test",
            "contact_name" => "Mr Uno",
            "subject" => "TEST API CRM",
            "city" => "SAINT DENIS",
            "opt_out" => false,
            "zip" => "97490",
            "mobile" => "0928309283",
            "country" => "France",
            "email_from" => "philippe-crm-test@sogexis.fr"
        ]);

        $result = $this->crmLeadApi->crmLeadsCreatePost($body);
        $this->assertInstanceOf(\Carooline\Model\CrmLead::class, $result);
        $this->assertEquals("SAINT DENIS", $result->getCity());
        $this->assertEquals("21 Rue du test", $result->getStreet());
        $this->assertEquals("TEST API CRM", $result->getSubject());
        $this->assertEquals("Bonjour voici un test API", $result->getDescription());
        $this->assertEquals("philippe-crm-test@sogexis.fr", $result->getEmailFrom());
        $this->assertEquals("0928309283", $result->getMobile());
        $this->assertEquals("0909809809", $result->getPhone());
        $this->assertEquals("97490", $result->getZip());
        $this->assertEquals("Mr Uno", $result->getContactName());
        $this->assertEquals("Rue 2", $result->getStreet2());
        $this->assertEquals("France", $result->getCountry());
        $this->assertIsInt($result->getId());
        
        // Delete
        $id = $result->getId();
        $delete = $this->crmLeadApi->crmLeadsIdDelete($id);
        $result = $this->crmLeadApi->crmLeadsGet("philippe-crm-test@sogexis.fr");
        $this->assertInstanceOf(CrmLeadSearchResponse::class, $result);
        $this->assertEquals(0, $result->getCount());
    }

    /**
     * Test case for crmLeadsGet
     *
     * Search CrmLead by Name(Subject) or Emailfrom.
     *
     */
    public function testCrmLeadsGet()
    {
        //$email_from = null, $subject = null
        $result = $this->crmLeadApi->crmLeadsGet("adfrance@ad.com");
        $this->assertInstanceOf(CrmLeadSearchResponse::class, $result);
        foreach ($result as $crmLead) {
            $this->assertEquals("Paris", $crmLead->getCity());
            $this->assertEquals("21 Rue de l'AD", $crmLead->getStreet());
            $this->assertEquals("Premier Contact AD", $crmLead->getSubject());
            $this->assertEquals("Lorem ipsum", $crmLead->getDescription());
            $this->assertEquals("adfrance@ad.com", $crmLead->getEmailFrom());
            $this->assertEquals("9867808978", $crmLead->getPhone());
            $this->assertEquals("75018", $crmLead->getZip());
            $this->assertEquals("Julien", $crmLead->getContactName());
            $this->assertEquals("France", $crmLead->getCountry());
            $this->assertIsInt($crmLead->getId());
        }
    }

    /**
     * Test case for crmLeadsIdGet
     *
     * Get CrmLead's informations.
     *
     */
    public function testCrmLeadsIdGet()
    {
        $result = $this->crmLeadApi->crmLeadsIdGet(1);
        $this->assertInstanceOf(\Carooline\Model\CrmLead::class, $result);
        $this->assertEquals("Paris", $result->getCity());
        $this->assertEquals("21 Rue de l'AD", $result->getStreet());
        $this->assertEquals("Premier Contact AD", $result->getSubject());
        $this->assertEquals("Lorem ipsum", $result->getDescription());
        $this->assertEquals("adfrance@ad.com", $result->getEmailFrom());
        $this->assertEquals("9867808978", $result->getPhone());
        $this->assertEquals("75018", $result->getZip());
        $this->assertEquals("Julien", $result->getContactName());
        $this->assertEquals("France", $result->getCountry());
        $this->assertIsInt($result->getId());
    }

    /**
     * Test case for crmLeadsIdPut
     *
     * Update Crm Lead informations.
     *
     */
    public function testCrmLeadsIdPut()
    {
        $body = new CrmLeadUpdateRequest([
            "mobile" => "01234567876",
        ]);

        $result = $this->crmLeadApi->crmLeadsIdPut(1, $body);
        $this->assertInstanceOf(\Carooline\Model\CrmLead::class, $result);
        $this->assertEquals("01234567876", $result->getMobile());
        
        $body = new CrmLeadUpdateRequest([
            "mobile" => "",
        ]);

        $result = $this->crmLeadApi->crmLeadsIdPut(1, $body);
        $this->assertInstanceOf(\Carooline\Model\CrmLead::class, $result);
        $this->assertEquals("", $result->getMobile());
    }
}
