<?php
/**
 * InvoicesApiTest
 * PHP version 5
 *
 * @category Class
 * @package  Carooline
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * sale REST services
 *
 * Get or Update Sales
 *
 * OpenAPI spec version: 0.1.0.1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.13
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the endpoint.
 */

 namespace Carooline;

 use GuzzleHttp\Client;
 use Carooline\Configuration;
 use Carooline\ApiException;
 use Carooline\ObjectSerializer;
 use Carooline\Api\AuthApi;
 use Carooline\Api\InvoicesApi;
 use Carooline\Model\LoginRequest;

/**
 * InvoicesApiTest Class Doc Comment
 *
 * @category Class
 * @package  Carooline
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InvoicesApiTest extends \PHPUnit\Framework\TestCase
{
    protected static $client;
    protected static $config;
    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass() : void
    {
        self::$client = new Client();
        self::$config = new Configuration();
        self::$config->setHost($_ENV['api_host']);

        $authApi = new AuthApi(
            self::$client,
            self::$config
        );
        $body = new LoginRequest([
            'login' => $_ENV['api_login'],
            'password' => $_ENV['api_password']
        ]);

        $result = $authApi->authLoginPost($body);
        $token = $result->getToken();
        self::$config->setAccessToken($token);
    }


    /**
     * Test case for invoicesGet
     *
     * Search Invoice by name/ref or partner's id and state ['paid','open']. Type ['out_invoice', 'in_invoice'] Invoice/Refund.
     *
     */
    public function testInvoicesGet()
    {
        $invoiceApi = new InvoicesApi(
            self::$client,
            self::$config
        );
        // invoiceGet($name = null, $partner_id = null, $state = null, $type = null)
        $result = $invoiceApi->invoicesGet(null, 31);
        $this->assertInstanceOf(\Carooline\Model\InvoiceSearchResponse::class, $result);
        $this->assertGreaterThanOrEqual(10, $result->getCount());
        foreach ($result->getRows() as $invoice) {
            $this->assertInstanceOf(\Carooline\Model\Invoice::class, $invoice);
            $this->assertEquals(31, $invoice->getPartner()->getId());
        }
        
        $result = $invoiceApi->invoicesGet("FC0024", 31);
        $this->assertInstanceOf(\Carooline\Model\InvoiceSearchResponse::class, $result);
        $this->assertGreaterThanOrEqual(1, $result->getCount());
        foreach ($result->getRows() as $invoice) {
            $this->assertInstanceOf(\Carooline\Model\Invoice::class, $invoice);
            $this->assertEquals(31, $invoice->getPartner()->getId());
            $this->assertEquals("FC0024", $invoice->getNumber());
            $this->assertEquals(28, $invoice->getId());
        }
    }

    /**
     * Test case for invoicesIdGet
     *
     * Get Invoice's informations.
     *
     */
    public function testInvoicesIdGet()
    {
        $invoiceApi = new InvoicesApi(
            self::$client,
            self::$config
        );
        $invoice = $invoiceApi->invoicesIdGet(28);
        $this->assertInstanceOf(\Carooline\Model\Invoice::class, $invoice);
        $this->assertEquals("FC0024", $invoice->getNumber());
        $this->assertEquals("paid", $invoice->getState());
        $this->assertEquals(28.8, $invoice->getAmountTax());
        $this->assertInstanceOf(\Carooline\Model\Partner::class, $invoice->getPartner());
        $this->assertEquals("2019-10-23", $invoice->getDateInvoice());
        foreach ($invoice->getInvoiceLine() as $invoiceLine) {
            $this->assertInstanceOf(\Carooline\Model\InvoiceLine::class, $invoiceLine);
        }
    }
}
